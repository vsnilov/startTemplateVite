@mixin rem($pxsize) {
  font-size: ($pxsize / $base-font-size) + rem;
}

@function rem($pxsize) {
  @return #{calc($pxsize / $base-font-size)}rem;
}

//fonts
//@include font-face("Roboto", "../font/Roboto/RobotoRegular", 400, normal);
@mixin font-face($font-family, $file-path, $weight: normal, $style: normal) {
  @font-face {
    font-weight: $weight;
    font-family: $font-family;
    font-style: $style;
    src: url("#{$file-path}.woff2") format("woff2"), url("#{$file-path}.woff") format("woff");
    font-display: swap;
  }
}

//@include centered()
@mixin centered($axis: "both") {
  position: absolute;

  @if ($axis == "both") {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  @if $axis == "x" {
    left: 50%;
    transform: translateX(-50%);
  }

  @if $axis == "y" {
    top: 50%;
    transform: translateY(-50%);
  }
}

//@include font;
@mixin font($font) {
  font-family: $font;
}

@mixin bgi($name, $size: cover, $position: center) {
  background-image: url($name);
  background-repeat: no-repeat;
  background-position: $position;
  background-size: $size;
}

@mixin bgBase() {
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

@mixin before() {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  content: "";
}

@mixin hoverOpacity($opacity: 0.8) {
  opacity: $opacity;
  &:hover {
    color: inherit;
    opacity: 1;
  }
}

@mixin beforeBg($color: rgba($color-black, 0.2)) {
  position: relative;
  &::after {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: $color;
    content: "";
  }
}

@mixin fullAbsolute() {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin xl() {
  @media screen and (max-width: 1699px) {
    @content;
  }
}

@mixin lg() {
  @media screen and (max-width: 1199px) {
    @content;
  }
}

@mixin md() {
  @media screen and (max-width: 991px) {
    @content;
  }
}

@mixin sm() {
  @media screen and (max-width: 767px) {
    @content;
  }
}

@mixin xs() {
  @media screen and (max-width: 349px) {
    @content;
  }
}

@mixin desktop() {
  @media screen and (min-width: 1199px) {
    @content;
  }
}

@function pixel-to-vw($pixelSize, $screenWidth: 1600) {
  $vw: calc($pixelSize / $screenWidth * 100);
  @return #{$vw}vw;
}

@function pixel-to-vh($pixelSize, $screenHeight: 900) {
  $vh: calc($pixelSize / $screenHeight * 100);
  @return #{$vh}vh;
}

@mixin blocFull() {
  margin: 0 calc(var(--margin-wrapper-inner-right) * -1) 0
    calc(var(--margin-wrapper-inner-left) * -1);
}

@mixin blocFullPadding() {
  padding: 0 var(--margin-wrapper-inner-right) 0 var(--margin-wrapper-inner-left);
}

@function marginContainer() {
  @return #{calc(100vw - var(--width-container)) / 2};
}

@mixin icon() {
  display: block;
  height: 100%;
  width: 100%;
}
